[{"id":"340fa0a816413845","type":"function","z":"2da95348c354fddf","name":"SEQ 1 - first 118 items","func":"// Nastavení\nvar pocet_baterek = 3;\n\n// Výkony na fázích - GRID\nvar l1pwr;\nvar l2pwr;\nvar l3pwr;\nvar totalinvpwr;\n\nif (msg.payload[108] >= 16000) {\n\n    l1pwr = (msg.payload[108] - 65535);\n\n} else {\n\n    l1pwr = msg.payload[108];\n\n}\n\nif (msg.payload[112] >= 16000) {\n\n    l2pwr = (msg.payload[112] - 65535);\n\n} else {\n\n    l2pwr = msg.payload[112];\n\n}\n\nif (msg.payload[116] >= 16000) {\n\n    l3pwr = (msg.payload[116] - 65535);\n\n} else {\n\n    l3pwr = msg.payload[116];\n}\n\n// Zátěž - odběr dům\nvar loadpower;\nvar feedinpower = msg.payload[70] - msg.payload[71];\n\ntotalinvpwr = (l1pwr + l2pwr + l3pwr);\n\nif (feedinpower < 0) {\n\n    loadpower = totalinvpwr + Math.abs(feedinpower);\n\n} else {\n\n    loadpower = totalinvpwr - feedinpower;\n\n}\n\n// Proud baterie\nvar battcurrent;\n\nif (msg.payload[21] >= 16000) {\n\n    battcurrent = (msg.payload[21] - 65535);\n\n} else {\n\n    battcurrent = msg.payload[21] / 10;\n\n}\n\n// Výkon baterie\nvar battpwr;\n\nif (msg.payload[22] >= 16000) {\n\n    battpwr = (msg.payload[22] - 65535);\n\n} else {\n\n    battpwr = msg.payload[22];\n\n}\n\nvar battery_charge_time;\nvar battery_discharge_time;\n\nif (battpwr != 0) {\n\nif (battpwr > 0) {\n\n    //Charging\n    \n    battery_charge_time = (((pocet_baterek * 5800) - ((pocet_baterek * 58) * msg.payload[28])) / Math.abs(battpwr)) * 60 * 60;\n    battery_discharge_time = 0;\n\n} else {\n\n    //Discharging\n\n    battery_discharge_time = (((pocet_baterek * 58) * (msg.payload[28]-10)) / Math.abs(battpwr)) * 60 * 60;\n    battery_charge_time = 0;\n\n}\n\n} else {\n\n    battery_discharge_time = 0;\n    battery_charge_time = 0;\n\n}\n\n\nmsg.payload = [\n    {\n        measurement: \"SolaxPower\",\n        fields: {\n            l_voltage: msg.payload[0]/10,\n            grid_power: msg.payload[2],\n            pv1_voltage: msg.payload[3]/10,\n            pv2_voltage: msg.payload[4]/10,\n            pv1_current: msg.payload[5]/10,\n            pv2_current: msg.payload[6]/10,\n            grid_frequency: msg.payload[7]/100,\n            temperature_invertor: msg.payload[8],\n            temperature_battery: msg.payload[24],\n            grid_status: msg.payload[26],\n            battery_voltage: msg.payload[20]/10,\n            battery_current: battcurrent,\n            battery_power: battpwr,\n            battery_soc: msg.payload[28],\n            pv1_power: msg.payload[10],\n            pv2_power: msg.payload[11],\n            pv_power_total: msg.payload[10]+msg.payload[11],\n            battery_charge_time: battery_charge_time,\n            battery_discharge_time: battery_discharge_time,\n            feedin_power: feedinpower,\n            feedin_total: msg.payload[72] / 100 + (msg.payload[73] * 655.35),\n            feedin_total_plusminusind: msg.payload[73],\n            import_total: (msg.payload[74] / 100) + (msg.payload[75] * 655.35),\n            import_total_plusminusind: msg.payload[75],\n            selfuse_today: msg.payload[80] / 10 - global.get(\"feedin_today\"),\n            selfuse_total: ((msg.payload[82] / 10) + (msg.payload[83] * 6553.5)) - (msg.payload[72] / 100 + (msg.payload[73] * 655.35)),\n            l1_voltage: msg.payload[106] / 10,\n            l1_current: msg.payload[107] / 10,\n            l1_power: l1pwr,\n            l1_frequency: msg.payload[109] / 100,\n            l2_voltage: msg.payload[110] / 10,\n            l2_current: msg.payload[111] / 10,\n            l2_power: l2pwr,\n            l2_frequency: msg.payload[113] / 100,\n            l3_voltage: msg.payload[114] / 10,\n            l3_current: msg.payload[115] / 10,\n            l3_power: l3pwr,\n            l3_frequency: msg.payload[117] / 100,\n            l_current: (msg.payload[107] + msg.payload[111] + msg.payload[115]) / 10,\n            l_power: totalinvpwr,\n            loadpower: loadpower,\n            batterydischarge_total: msg.payload[29] / 10,\n            batterydischarge_plusminusind: msg.payload[30],\n            batterydischarge_today: msg.payload[32] / 10,\n            batterycharge_total: msg.payload[33] / 10,\n            batterycharge_plusminusind: msg.payload[34],\n            batterycharge_today: msg.payload[35] / 10,\n        },\n        timestamp: new Date()\n    }];\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":200,"wires":[["6b4b050bc3891ca2","fa373a629efef09b"]]},{"id":"6b4b050bc3891ca2","type":"influxdb batch","z":"2da95348c354fddf","influxdb":"720220f3.45d02","precision":"","retentionPolicy":"","name":"SolaxPower","x":1230,"y":200,"wires":[]},{"id":"1e74b17478e11edf","type":"function","z":"2da95348c354fddf","name":"SEQ 2 - second 118 items","func":"global.set(\"feedin_today\", msg.payload[34] / 100);\n\nmsg.payload = [\n    {\n        measurement: \"SolaxPower\",\n        fields: {\n            l1_voltage_offgrid: msg.payload[0]/10,\n            l1_current_offgrid: msg.payload[1]/10,\n            l1_power_offgrid: msg.payload[2],\n            l1_frequency_offgrid: msg.payload[3]/100,\n            l2_voltage_offgrid: msg.payload[4] / 10,\n            l2_current_offgrid: msg.payload[5] / 10,\n            l2_power_offgrid: msg.payload[6],\n            l2_frequency_offgrid: msg.payload[7] / 100,\n            l3_voltage_offgrid: msg.payload[8] / 10,\n            l3_current_offgrid: msg.payload[9] / 10,\n            l3_power_offgrid: msg.payload[10],\n            l3_frequency_offgrid: msg.payload[11] / 100,\n            l1_feedin_power: msg.payload[12] - msg.payload[13],\n            l2_feedin_power: msg.payload[14] - msg.payload[15],\n            l3_feedin_power: msg.payload[16] - msg.payload[17],\n            solarenergy_total: (msg.payload[30] / 10) + (msg.payload[31] * 6553.5),\n            solarenergy_today: msg.payload[32] / 10,\n            feedin_today: msg.payload[34] / 100,\n            feedin_today_plusminusind: msg.payload[35],\n            import_today: msg.payload[36] / 100,\n            import_today_plusminusind: msg.payload[37],\n            echarge_today: msg.payload[27],\n            echarge_total: msg.payload[28]\n        },\n        timestamp: new Date()\n    }];\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":240,"wires":[["6b4b050bc3891ca2","fa373a629efef09b"]]},{"id":"034a4f28939cace7","type":"modbus-flex-sequencer","z":"2da95348c354fddf","name":"","sequences":[{"name":"seq1","unitid":"1","fc":"FC4","address":"0","quantity":"118"},{"name":"seq2","unitid":"1","fc":"FC4","address":"0x0076","quantity":"118"}],"server":"109b6bc65c820ead","showStatusActivities":false,"showErrors":false,"showWarnings":true,"logIOActivities":false,"useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"delayOnStart":false,"startDelayTime":"","x":460,"y":240,"wires":[["8a9ab4bc9a7e8e88"],[]]},{"id":"99251c19a02f47bb","type":"inject","z":"2da95348c354fddf","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":190,"y":240,"wires":[["034a4f28939cace7"]]},{"id":"8a9ab4bc9a7e8e88","type":"switch","z":"2da95348c354fddf","name":"","property":"modbusRequest.name","propertyType":"msg","rules":[{"t":"eq","v":"seq1","vt":"str"},{"t":"eq","v":"seq2","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":690,"y":220,"wires":[["340fa0a816413845","fa373a629efef09b"],["1e74b17478e11edf"]]},{"id":"720220f3.45d02","type":"influxdb","hostname":"10.0.0.25","port":"8086","protocol":"http","database":"smarthome-one","name":"","usetls":false,"tls":""},{"id":"109b6bc65c820ead","type":"modbus-client","name":"Solax Invertor","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"tcpHost":"10.0.0.250","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectOnTimeout":true,"reconnectTimeout":2000,"parallelUnitIdsAllowed":true}]